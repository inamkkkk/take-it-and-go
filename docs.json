{
  "docs": [
    {
      "summary": "This file is the package.json manifest for the takeitgo-lite-backend project. It defines project metadata, scripts for development and production, and lists its dependencies and devDependencies."
    },
    {
      "summary": "Environment variables configuration file example. These variables are used to configure the application's settings such as port, database connection, and authentication secrets. Uncomment and set the GOOGLE_MAPS_API_KEY for optional Google Maps integration."
    },
    {
      "summary": "This file is a .gitignore file. It specifies intentionally untracked files that Git should ignore. This is a standard configuration file for Git and does not represent a route, model, utility, or config that can be documented within the OpenAPI specification."
    },
    {
      "summary": "This file is the main entry point of the backend application. It sets up the HTTP server, initializes Socket.IO, connects to the database, and handles graceful shutdown and error handling."
    },
    {
      "summary": "Main application file for setting up the Express server, middleware, and routes. It configures logging, CORS, request body parsing, and error handling. It also mounts the main API routes and handles 404 errors for unhandled routes."
    },
    {
      "summary": "Utility function to establish a connection to a MongoDB database using Mongoose. It logs connection success or failure and exits the process if connection fails."
    },
    {
      "summary": "Configuration settings for the application, including environment variables related to Node.js environment, port, database connection, JWT settings, and optional Google Maps API key. This file defines and validates these configuration values."
    },
    {
      "components": {
        "schemas": {
          "User": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique identifier for the user (generated by MongoDB)",
                "readOnly": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address",
                "example": "test@example.com"
              },
              "phone": {
                "type": "string",
                "description": "User's phone number, including country code",
                "example": "+11234567890"
              },
              "password": {
                "type": "string",
                "minLength": 8,
                "description": "User's password (minimum 8 characters)",
                "writeOnly": true
              },
              "role": {
                "type": "string",
                "enum": [
                  "shipper",
                  "traveler"
                ],
                "default": "shipper",
                "description": "Role of the user in the system"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the user was created",
                "readOnly": true
              }
            },
            "required": [
              "email",
              "phone",
              "password"
            ]
          }
        }
      }
    },
    {
      "components": {
        "schemas": {
          "Payment": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique identifier for the payment.",
                "readOnly": true
              },
              "deliveryId": {
                "type": "string",
                "format": "ObjectId",
                "description": "Reference to the associated Delivery."
              },
              "amount": {
                "type": "number",
                "description": "The amount of the payment.",
                "minimum": 0
              },
              "status": {
                "type": "string",
                "description": "The current status of the payment.",
                "enum": [
                  "pending",
                  "completed",
                  "failed",
                  "refunded"
                ],
                "default": "pending"
              },
              "transactionRef": {
                "type": "string",
                "description": "External payment gateway transaction ID.",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the payment was created.",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the payment was last updated.",
                "readOnly": true
              }
            },
            "required": [
              "deliveryId",
              "amount"
            ]
          }
        }
      }
    },
    {
      "components": {
        "schemas": {
          "Delivery": {
            "type": "object",
            "properties": {
              "shipperId": {
                "type": "string",
                "description": "ID of the shipper making the delivery request.",
                "example": "60f1b2b4b3e3e3e3e3e3e3e3"
              },
              "travelerId": {
                "type": "string",
                "nullable": true,
                "description": "ID of the traveler assigned to this delivery.",
                "example": "60f1b2b4b3e3e3e3e3e3e3e4"
              },
              "pickup": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Full address for pickup.",
                    "example": "123 Main St, Anytown, USA"
                  },
                  "coordinates": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Pickup coordinates in [longitude, latitude] format.",
                    "example": [
                      -74.006,
                      40.7128
                    ]
                  }
                },
                "required": [
                  "address"
                ]
              },
              "drop": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Full address for drop-off.",
                    "example": "456 Oak Ave, Otherville, USA"
                  },
                  "coordinates": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Drop-off coordinates in [longitude, latitude] format.",
                    "example": [
                      -73.9352,
                      40.8371
                    ]
                  }
                },
                "required": [
                  "address"
                ]
              },
              "itemDescription": {
                "type": "string",
                "description": "Detailed description of the item to be delivered.",
                "example": "A delicate antique vase"
              },
              "itemWeight": {
                "type": "number",
                "format": "float",
                "description": "Weight of the item in kilograms.",
                "default": 0,
                "example": 2.5
              },
              "itemDimensions": {
                "type": "object",
                "properties": {
                  "width": {
                    "type": "number",
                    "format": "float",
                    "description": "Width of the item in centimeters.",
                    "example": 30
                  },
                  "height": {
                    "type": "number",
                    "format": "float",
                    "description": "Height of the item in centimeters.",
                    "example": 40
                  },
                  "depth": {
                    "type": "number",
                    "format": "float",
                    "description": "Depth of the item in centimeters.",
                    "example": 20
                  }
                },
                "description": "Dimensions of the item in centimeters."
              },
              "price": {
                "type": "number",
                "format": "float",
                "description": "The price for the delivery service.",
                "example": 50.75
              },
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "matched",
                  "in-transit",
                  "delivered",
                  "cancelled",
                  "completed"
                ],
                "description": "Current status of the delivery.",
                "default": "pending"
              },
              "requestedPickupTime": {
                "type": "string",
                "format": "date-time",
                "description": "The preferred time for pickup.",
                "example": "2023-10-27T10:00:00Z"
              },
              "expectedDeliveryTime": {
                "type": "string",
                "format": "date-time",
                "description": "The estimated time of delivery.",
                "example": "2023-10-27T14:00:00Z"
              },
              "actualDeliveryTime": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The actual time the delivery was completed.",
                "example": "2023-10-27T13:45:00Z"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the delivery record was created.",
                "readOnly": true,
                "example": "2023-10-26T09:00:00Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the delivery record was last updated.",
                "readOnly": true,
                "example": "2023-10-26T11:30:00Z"
              }
            },
            "required": [
              "shipperId",
              "pickup",
              "drop",
              "itemDescription",
              "price"
            ]
          }
        }
      }
    },
    {
      "components": {
        "schemas": {
          "Chat": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique identifier for the chat message.",
                "readOnly": true
              },
              "senderId": {
                "type": "string",
                "description": "ID of the user who sent the message.",
                "example": "60d5ec49f3b5a3b1f8a2b1c3"
              },
              "receiverId": {
                "type": "string",
                "description": "ID of the user who received the message.",
                "example": "60d5ec49f3b5a3b1f8a2b1c4"
              },
              "deliveryId": {
                "type": "string",
                "description": "Optional ID of the delivery associated with the chat message.",
                "example": "60d5ec49f3b5a3b1f8a2b1c5"
              },
              "message": {
                "type": "string",
                "description": "The content of the chat message.",
                "example": "Hello, where is my delivery?"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp when the message was sent.",
                "readOnly": true
              },
              "readBy": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "ID of the user who has read the message."
                },
                "description": "List of user IDs who have read the message."
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of when the chat record was created.",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of when the chat record was last updated.",
                "readOnly": true
              }
            },
            "required": [
              "senderId",
              "receiverId",
              "message"
            ]
          }
        }
      }
    },
    {
      "components": {
        "schemas": {
          "GPSLog": {
            "type": "object",
            "properties": {
              "deliveryId": {
                "type": "string",
                "description": "The ID of the delivery associated with this GPS log.",
                "format": "objectId",
                "example": "60a7c3e2a7c3e2a7c3e2a7c3"
              },
              "userId": {
                "type": "string",
                "description": "The ID of the user whose location is being tracked (e.g., traveler).",
                "format": "objectId",
                "example": "60a7c3e2a7c3e2a7c3e2a7c3"
              },
              "latitude": {
                "type": "number",
                "description": "The latitude coordinate of the GPS log.",
                "example": 34.0522
              },
              "longitude": {
                "type": "number",
                "description": "The longitude coordinate of the GPS log.",
                "example": -118.2437
              },
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp when the GPS log was recorded.",
                "default": "now"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp when the GPS log was created (auto-generated)."
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp when the GPS log was last updated (auto-generated)."
              }
            },
            "required": [
              "deliveryId",
              "userId",
              "latitude",
              "longitude"
            ]
          }
        }
      }
    },
    {
      "summary": "Authentication service for user management, including signup, login, and password reset functionalities."
    },
    {
      "summary": "Service for managing delivery matching logic."
    },
    {
      "paths": {
        "/deliveries/{deliveryId}/track/start": {
          "post": {
            "summary": "Start tracking for a delivery.",
            "tags": [
              "Tracking"
            ],
            "parameters": [
              {
                "name": "deliveryId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "description": "The ID of the delivery to start tracking."
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "travelerId": {
                        "type": "string",
                        "description": "The ID of the traveler initiating the tracking."
                      }
                    },
                    "required": [
                      "travelerId"
                    ]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Delivery status updated to 'in-transit'.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Delivery"
                    }
                  }
                }
              },
              "400": {
                "description": "Bad Request.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppError"
                    }
                  }
                }
              },
              "403": {
                "description": "Forbidden - User not authorized to track this delivery.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppError"
                    }
                  }
                }
              },
              "404": {
                "description": "Delivery not found.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppError"
                    }
                  }
                }
              }
            }
          }
        },
        "/deliveries/{deliveryId}/track/stop": {
          "post": {
            "summary": "Stop tracking for a delivery.",
            "tags": [
              "Tracking"
            ],
            "parameters": [
              {
                "name": "deliveryId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "description": "The ID of the delivery to stop tracking."
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "travelerId": {
                        "type": "string",
                        "description": "The ID of the traveler completing the delivery."
                      }
                    },
                    "required": [
                      "travelerId"
                    ]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Delivery status updated to 'delivered'.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Delivery"
                    }
                  }
                }
              },
              "403": {
                "description": "Forbidden - User not authorized to stop tracking for this delivery.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppError"
                    }
                  }
                }
              },
              "404": {
                "description": "Delivery not found.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppError"
                    }
                  }
                }
              }
            }
          }
        },
        "/deliveries/{deliveryId}/track/log-gps": {
          "post": {
            "summary": "Log a GPS coordinate for a delivery.",
            "tags": [
              "Tracking"
            ],
            "parameters": [
              {
                "name": "deliveryId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "description": "The ID of the delivery for which to log GPS coordinates."
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "The ID of the user (e.g., traveler) logging the GPS coordinate."
                      },
                      "latitude": {
                        "type": "number",
                        "description": "The latitude coordinate."
                      },
                      "longitude": {
                        "type": "number",
                        "description": "The longitude coordinate."
                      }
                    },
                    "required": [
                      "userId",
                      "latitude",
                      "longitude"
                    ]
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "GPS coordinate logged successfully.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/GPSLog"
                    }
                  }
                }
              },
              "400": {
                "description": "Bad Request (e.g., delivery not in transit).",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppError"
                    }
                  }
                }
              },
              "403": {
                "description": "Forbidden - Only the assigned traveler can log GPS.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppError"
                    }
                  }
                }
              },
              "404": {
                "description": "Delivery not found.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppError"
                    }
                  }
                }
              }
            }
          }
        },
        "/deliveries/{deliveryId}/track/logs": {
          "get": {
            "summary": "Get all tracking logs for a specific delivery.",
            "tags": [
              "Tracking"
            ],
            "parameters": [
              {
                "name": "deliveryId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "description": "The ID of the delivery for which to retrieve tracking logs."
              }
            ],
            "responses": {
              "200": {
                "description": "An array of GPS log entries for the delivery.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GPSLog"
                      }
                    }
                  }
                }
              },
              "404": {
                "description": "Delivery not found.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "components": {
        "schemas": {
          "GPSLog": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique identifier for the GPS log entry."
              },
              "deliveryId": {
                "type": "string",
                "description": "The ID of the delivery this log belongs to."
              },
              "userId": {
                "type": "string",
                "description": "The ID of the user who logged the GPS coordinate."
              },
              "latitude": {
                "type": "number",
                "description": "The latitude coordinate."
              },
              "longitude": {
                "type": "number",
                "description": "The longitude coordinate."
              },
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp when the GPS coordinate was logged."
              }
            },
            "required": [
              "deliveryId",
              "userId",
              "latitude",
              "longitude",
              "timestamp"
            ]
          },
          "Delivery": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique identifier for the delivery."
              },
              "pickupLocation": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Point"
                    ],
                    "default": "Point"
                  },
                  "coordinates": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Longitude and Latitude."
                  }
                },
                "required": [
                  "type",
                  "coordinates"
                ]
              },
              "dropoffLocation": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Point"
                    ],
                    "default": "Point"
                  },
                  "coordinates": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Longitude and Latitude."
                  }
                },
                "required": [
                  "type",
                  "coordinates"
                ]
              },
              "recipientName": {
                "type": "string"
              },
              "recipientPhone": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "assigned",
                  "in-transit",
                  "delivered",
                  "cancelled"
                ],
                "default": "pending"
              },
              "travelerId": {
                "type": "string",
                "nullable": true,
                "description": "The ID of the traveler assigned to this delivery."
              },
              "shipperId": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "actualDeliveryTime": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            },
            "required": [
              "pickupLocation",
              "dropoffLocation",
              "recipientName",
              "recipientPhone",
              "description",
              "status",
              "shipperId",
              "createdAt",
              "updatedAt"
            ]
          },
          "AppError": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "A human-readable error message."
              },
              "statusCode": {
                "type": "integer",
                "description": "The HTTP status code associated with the error."
              }
            },
            "required": [
              "message",
              "statusCode"
            ]
          }
        }
      }
    }
  ]
}