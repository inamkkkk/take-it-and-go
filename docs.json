{
  "docs": [
    {
      "summary": "This file is the package.json manifest for the takeitgo-lite-backend project. It defines project metadata, scripts for development and production, and lists its dependencies and devDependencies."
    },
    {
      "summary": "Environment variables configuration file example. These variables are used to configure the application's settings such as port, database connection, and authentication secrets. Uncomment and set the GOOGLE_MAPS_API_KEY for optional Google Maps integration."
    },
    {
      "summary": "This file is a .gitignore file. It specifies intentionally untracked files that Git should ignore. This is a standard configuration file for Git and does not represent a route, model, utility, or config that can be documented within the OpenAPI specification."
    },
    {
      "summary": "This file is the main entry point of the backend application. It sets up the HTTP server, initializes Socket.IO, connects to the database, and handles graceful shutdown and error handling."
    },
    {
      "summary": "Main application file for setting up the Express server, middleware, and routes. It configures logging, CORS, request body parsing, and error handling. It also mounts the main API routes and handles 404 errors for unhandled routes."
    },
    {
      "summary": "Utility function to establish a connection to a MongoDB database using Mongoose. It logs connection success or failure and exits the process if connection fails."
    },
    {
      "summary": "Configuration settings for the application, including environment variables related to Node.js environment, port, database connection, JWT settings, and optional Google Maps API key. This file defines and validates these configuration values."
    },
    {
      "components": {
        "schemas": {
          "User": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique identifier for the user (generated by MongoDB)",
                "readOnly": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address",
                "example": "test@example.com"
              },
              "phone": {
                "type": "string",
                "description": "User's phone number, including country code",
                "example": "+11234567890"
              },
              "password": {
                "type": "string",
                "minLength": 8,
                "description": "User's password (minimum 8 characters)",
                "writeOnly": true
              },
              "role": {
                "type": "string",
                "enum": [
                  "shipper",
                  "traveler"
                ],
                "default": "shipper",
                "description": "Role of the user in the system"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the user was created",
                "readOnly": true
              }
            },
            "required": [
              "email",
              "phone",
              "password"
            ]
          }
        }
      }
    },
    {
      "components": {
        "schemas": {
          "Payment": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique identifier for the payment.",
                "readOnly": true
              },
              "deliveryId": {
                "type": "string",
                "format": "ObjectId",
                "description": "Reference to the associated Delivery."
              },
              "amount": {
                "type": "number",
                "description": "The amount of the payment.",
                "minimum": 0
              },
              "status": {
                "type": "string",
                "description": "The current status of the payment.",
                "enum": [
                  "pending",
                  "completed",
                  "failed",
                  "refunded"
                ],
                "default": "pending"
              },
              "transactionRef": {
                "type": "string",
                "description": "External payment gateway transaction ID.",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the payment was created.",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the payment was last updated.",
                "readOnly": true
              }
            },
            "required": [
              "deliveryId",
              "amount"
            ]
          }
        }
      }
    }
  ]
}